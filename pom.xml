<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.github.vasedb</groupId>
  <artifactId>vasedb</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>vasedb</name>
  <url>http://vasedb.github.io</url>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <!-- Global Maven Variable -->
    <native.maven.plugin.version>0.10.2</native.maven.plugin.version>
    <bin.file.name>vasedb</bin.file.name>
    <app.main.class>io.github.vasedb.App</app.main.class>
  </properties>
  <dependencies>
    <!-- Unit Testting -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- Maven Compiler Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>
      <!-- Maven Jar Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>${app.main.class}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <!-- GraalVM Native Plugin -->
      <plugin>
        <groupId>org.graalvm.buildtools</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <version>${native.maven.plugin.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>build-native</id>
            <goals>
              <goal>build</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
        <configuration>
          <!-- 全局配置 -->
          <skip>false</skip>
          <imageName>${bin.file.name}</imageName>
          <mainClass>${app.main.class}</mainClass>
          <buildArgs>
            <!-- 全局的构建参数 -->
            <buildArg>--gc=serial</buildArg>
            <buildArg>-J-Xmx1G</buildArg>
          </buildArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <!-- 类似于交叉编译参数 -->
  <profiles>
    <profile>
      <id>Linux-AMD64-G1</id>
      <activation>
        <os>
          <family>unix</family>
          <arch>amd64</arch>
        </os>
      </activation>
      <build>
        <plugins>
          <!-- GraalVM Native Plugin 配置 -->
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <configuration>
              <buildArgs>
                <!-- 指定使用特定的 G1 并发垃圾回收器-->
                <buildArg>--gc=G1</buildArg>
                <buildArg>-J-Xmx4G</buildArg>
                <!-- 依赖全部静态链接打包到二进制文件中 -->
                <buildArg>--static</buildArg>
                <buildArg>--libc=musl</buildArg>
                <!-- 禁止回退优化代码生成，最小的二进制兼容文件 -->
                <buildArg>--no-fallback</buildArg>
                <!-- 支持的最低CPU架构 -->
                <buildArg>-march=compatibility</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>